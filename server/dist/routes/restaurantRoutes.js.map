{"version":3,"sources":["../../src/routes/restaurantRoutes.js"],"names":["routes","Restaurant","restaurantRouter","Router","restaurantCtrl","use","req","res","next","err","end","route","post","get","findById","params","restaurantId","restaurant","status","send","returnRestaurant","toJSON","links","json","module","exports"],"mappings":";;AAIA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,CAACC,UAAD,EAAgB;;AAE3B,QAAMC,mBAAmB,kBAAQC,MAAR,EAAzB;AACA,QAAMC,iBAAmB,oCAAqBH,UAArB,CAAzB;;AAEA;;;AAGAC,qBAAiBG,GAAjB,CAAqB,SAArB,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChD,8BAAOF,GAAP,EAAYC,GAAZ,EAAiB,UAACE,GAAD,EAAS;AACtB,gBAAIA,GAAJ,EAAS;AACLF,oBAAIG,GAAJ,CAAQ,uBAAR;AACH;AACDH,gBAAIG,GAAJ,CAAQ,gBAAR;AACH,SALD;AAMH,KAPD;;AASAR,qBAAiBS,KAAjB,CAAuB,GAAvB,EACKC,IADL,CACUR,eAAeQ,IADzB,EAEKC,GAFL,CAEST,eAAeS,GAFxB;;AAIAX,qBAAiBG,GAAjB,CAAqB,gBAArB,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvDP,mBAAWa,QAAX,CAAoBR,IAAIS,MAAJ,CAAWC,YAA/B,EAA6C,UAACP,GAAD,EAAMQ,UAAN,EAAqB;AAC9D,gBAAIR,GAAJ,EAAS;AACLF,oBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,GAArB;AACH,aAFD,MAEO,IAAIQ,UAAJ,EAAgB;AACnBX,oBAAIW,UAAJ,GAAiBA,UAAjB;AACAT;AACH,aAHM,MAGA;AACHD,oBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qBAArB;AACH;AACJ,SATD;AAUH,KAXD;;AAaAjB,qBAAiBS,KAAjB,CAAuB,gBAAvB,EACKE,GADL,CACS,UAACP,GAAD,EAAMC,GAAN,EAAc;AACf,YAAIa,mBAAmBd,IAAIW,UAAJ,CAAeI,MAAf,EAAvB;;AAEAD,yBAAiBE,KAAjB,GAAwB,EAAxB;AACAf,YAAIgB,IAAJ,CAASH,gBAAT;AACH,KANL;;AAQA,WAAOlB,gBAAP;AACH,CA3CD,C,CARA;;;;AAqDAsB,OAAOC,OAAP,GAAiBzB,MAAjB","file":"restaurantRoutes.js","sourcesContent":["/**\r\n * Created by lejoss on 7/28/16.\r\n */\r\n\r\nimport express from 'express'\r\nimport restaurantController from '../controllers/restaurantController'\r\nimport upload from '../config/upload'\r\n\r\nconst routes = (Restaurant) => {\r\n\r\n    const restaurantRouter = express.Router()\r\n    const restaurantCtrl   = restaurantController(Restaurant)\r\n\r\n    /* find a better solution for uploading files in a form.\r\n     * this is middleware example for upload using multer\r\n     * */\r\n    restaurantRouter.use('/upload', (req, res, next) => {\r\n        upload(req, res, (err) => {\r\n            if (err) {\r\n                res.end('Error uploading file.')\r\n            }\r\n            res.end('File uploaded.')\r\n        })\r\n    })\r\n\r\n    restaurantRouter.route('/')\r\n        .post(restaurantCtrl.post)\r\n        .get(restaurantCtrl.get)\r\n\r\n    restaurantRouter.use('/:restaurantId', (req, res, next) => {\r\n        Restaurant.findById(req.params.restaurantId, (err, restaurant) => {\r\n            if (err) {\r\n                res.status(500).send(err)\r\n            } else if (restaurant) {\r\n                req.restaurant = restaurant\r\n                next()\r\n            } else {\r\n                res.status(404).send('no restaurant found')\r\n            }\r\n        })\r\n    })\r\n\r\n    restaurantRouter.route('/:restaurantId')\r\n        .get((req, res) => {\r\n            let returnRestaurant = req.restaurant.toJSON()\r\n\r\n            returnRestaurant.links ={}\r\n            res.json(returnRestaurant)\r\n        })\r\n\r\n    return restaurantRouter\r\n}\r\n\r\nmodule.exports = routes"]}